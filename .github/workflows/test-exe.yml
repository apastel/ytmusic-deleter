# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Verify executables

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  test_on_linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4.1.2
    - name: Set up Python 3.10
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.10"
    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
    - name: Download fbs
      env:
        FBS_URL_ID: ${{ secrets.FBS_URL_ID }}
      run: |
        curl -L https://drive.google.com/uc?id=$FBS_URL_ID --output fbs_pro-1.2.1.tar.gz
    - name: Install dependencies
      run: |
        sudo apt update && sudo apt install -y libegl1-mesa libegl1
        pdm install -dG gui
    - name: Run editable CLI from venv
      id: run-cli
      run: |
        pdm ytmusic-deleter
        echo "version=$(pdm ytmusic-deleter --version)" >> $GITHUB_OUTPUT
    - name: Run fbs app
      run: |
        ./gui/scripts/test_run_exe.sh "${{ steps.run-cli.outputs.version }}"

  test_on_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4.1.2
    - name: Set up Python 3.10
      uses: actions/setup-python@v5.1.0
      with:
        python-version: "3.10"
    - name: Setup PDM
      uses: pdm-project/setup-pdm@v4
    - name: Download fbs
      env:
        FBS_URL_ID: ${{ secrets.FBS_URL_ID }}
      run: |
        curl -L https://drive.google.com/uc?id=$FBS_URL_ID --output fbs_pro-1.2.1.tar.gz
    - name: Install dependencies
      run: |
        pdm install -dG gui
    - name: Run editable CLI from venv
      id: run-cli
      run: |
        . .venv/Scripts/activate
        ytmusic-deleter
        echo "version=$(ytmusic-deleter --version)" >> $GITHUB_OUTPUT
    - name: Run fbs app
      run: |
        ./gui/scripts/test_run_exe.sh "${{ steps.run-cli.outputs.version }}"
