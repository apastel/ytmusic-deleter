name: Release and Publish

on:
  push:
    tags:
      - '**'
  workflow_call:
  workflow_dispatch:
    inputs:
      publish-pypi:
        description: 'Skip publishing this release to PyPI?'
        type: choice
        required: false
        default: 'Do not skip'
        options:
          - 'Do not skip'
          - 'Skip'

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  build-exe:
    uses: ./.github/workflows/build-exe.yml
    secrets: inherit
  build-deb:
    uses: ./.github/workflows/build-deb.yml
    secrets: inherit

  build-wheel:
    name: Build PyPI dist
    runs-on: ubuntu-latest
    needs:
      - build-exe
      - build-deb

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - uses: pdm-project/setup-pdm@v4
    - name: Build a binary wheel and a source tarball
      run: pdm build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: |
      Publish to PyPI
    needs:
    - build-wheel
    if: ${{ inputs.publish-pypi != 'Skip' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Draft GitHub Release
    needs:
      - build-wheel
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@main
      with:
        inputs: |
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Draft GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create \
        '${{ github.ref_name }}' \
        --repo '${{ github.repository }}' \
        --generate-notes \
        --draft
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: |
        gh release upload \
        '${{ github.ref_name }}' \
        --repo '${{ github.repository }}' \
        dist/**
    - name: Download Windows installer
      uses: actions/download-artifact@v4
      with:
        name: installer-exe
    - name: Download Linux installer
      uses: actions/download-artifact@v4
      with:
        name: installer-deb
    - name: Upload executable installers to Github Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release upload \
        '${{ github.ref_name }}' \
        --repo '${{ github.repository }}' \
        YTMusic_Deleter-${{ github.ref_name }}-Windows-Installer.exe \
        YTMusic_Deleter-${{ github.ref_name }}-Linux-Installer.deb
